digraph G {
  rankdir = "RL";
  node [shape = rect, fontname = "Helvetica-Bold", penwidth=3];
  edge [fontname="Helvetica-Bold", penwidth=1];
  "data.archive_file.code" [label="    data.archive_file    \n code", color=orange];
  "data.aws_iam_policy_document.assume_role" [label="    data.aws_iam_policy_document    \n assume_role", color=red];
  "aws_apigatewayv2_api.leadgen" [label="    aws_apigatewayv2_api    \n leadgen", color=purple];
  "aws_apigatewayv2_integration.lambda_integration" [label="    aws_apigatewayv2_integration    \n lambda_integration", color=purple];
  "aws_apigatewayv2_route.leadgen" [label="    aws_apigatewayv2_route    \n leadgen", color=purple];        
  "aws_apigatewayv2_stage.prod" [label="    aws_apigatewayv2_stage    \n prod", color=purple];
  "aws_db_instance.postgres" [label="    aws_db_instance    \n postgres", color=blue];
  "aws_db_subnet_group.db_subnet" [label="    aws_db_subnet_group    \n db_subnet", color=blue];
  "aws_iam_instance_profile.ec2_airflow_profile" [label="    aws_iam_instance_profile    \n ec2_airflow_profile", color=red];
  "aws_iam_role.ec2_airflow_role" [label="    aws_iam_role    \n ec2_airflow_role", color=red];
  "aws_iam_role.lambda" [label="    aws_iam_role    \n lambda", color=red];
  "aws_iam_role.rds_s3_export_role" [label="    aws_iam_role    \n    rds_s3_export_role    ", color=red];      
  "aws_iam_role_policy.ec2_airflow_policy" [label="    aws_iam_role_policy    \n ec2_airflow_policy", color=red];
  "aws_iam_role_policy.lambda_vpc_policy" [label="    aws_iam_role_policy    \n lambda_vpc_policy", color=red];
  "aws_iam_role_policy.rds_s3_export_policy" [label="    aws_iam_role_policy    \n    rds_s3_export_policy    ", color=red];
  "aws_instance.snap" [label="    aws_instance    \n snap"];
  "aws_internet_gateway.igw" [label="    aws_internet_gateway    \n igw", color=green];
  "aws_kms_key.s3_export_key" [label="    aws_kms_key    \n s3_export_key"];
  "aws_lambda_function.leadgen" [label="    aws_lambda_function    \n leadgen", color=orange];
  "aws_lambda_permission.allow_http_api" [label="    aws_lambda_permission    \n allow_http_api", color=orange];
  "aws_route_table.public_rt" [label="    aws_route_table    \n public_rt", color=green];
  "aws_route_table_association.public_assoc" [label="    aws_route_table_association    \n public_assoc", color=green];
  "aws_s3_bucket.rds_snapshots" [label="    aws_s3_bucket    \n rds_snapshots"];
  "aws_security_group.ec2" [label="    aws_security_group    \n ec2", color=green];
  "aws_security_group.lambda" [label="    aws_security_group    \n lambda", color=green];
  "aws_security_group.rds" [label="    aws_security_group    \n rds", color=green];
  "aws_subnet.bastion" [label="    aws_subnet    \n bastion", color=green];
  "aws_subnet.main" [label="    aws_subnet    \n main", color=green];
  "aws_subnet.main2" [label="    aws_subnet    \n main2", color=green];
  "aws_vpc.main" [label="    aws_vpc.main    ", color=green];
  "aws_vpc_security_group_ingress_rule.ec2_to_rds" [label="        aws_vpc_security_group_ingress_rule        \n ec2_to_rds", color=green];
  "aws_vpc_security_group_ingress_rule.lambda_to_rds" [label="        aws_vpc_security_group_ingress_rule        \n lambda_to_rds", color=green];
  "aws_vpc_security_group_ingress_rule.public_to_ec2" [label="        aws_vpc_security_group_ingress_rule        \n public_to_ec2", color=green];
  "aws_apigatewayv2_integration.lambda_integration" -> "aws_apigatewayv2_api.leadgen";
  "aws_apigatewayv2_integration.lambda_integration" -> "aws_lambda_function.leadgen";
  "aws_apigatewayv2_route.leadgen" -> "aws_apigatewayv2_integration.lambda_integration";
  "aws_apigatewayv2_stage.prod" -> "aws_apigatewayv2_api.leadgen";
  "aws_db_instance.postgres" -> "aws_db_subnet_group.db_subnet";
  "aws_db_instance.postgres" -> "aws_security_group.rds";
  "aws_db_subnet_group.db_subnet" -> "aws_subnet.main";
  "aws_db_subnet_group.db_subnet" -> "aws_subnet.main2";
  "aws_iam_instance_profile.ec2_airflow_profile" -> "aws_iam_role.ec2_airflow_role";
  "aws_iam_role.lambda" -> "data.aws_iam_policy_document.assume_role";
  "aws_iam_role_policy.ec2_airflow_policy" -> "aws_iam_role.ec2_airflow_role";      
  "aws_iam_role_policy.ec2_airflow_policy" -> "aws_kms_key.s3_export_key";
  "aws_iam_role_policy.ec2_airflow_policy" -> "aws_s3_bucket.rds_snapshots";        
  "aws_iam_role_policy.lambda_vpc_policy" -> "aws_iam_role.lambda";
  "aws_iam_role_policy.rds_s3_export_policy" -> "aws_iam_role.rds_s3_export_role";  
  "aws_iam_role_policy.rds_s3_export_policy" -> "aws_kms_key.s3_export_key";        
  "aws_iam_role_policy.rds_s3_export_policy" -> "aws_s3_bucket.rds_snapshots";      
  "aws_instance.snap" -> "aws_iam_instance_profile.ec2_airflow_profile";
  "aws_instance.snap" -> "aws_security_group.ec2";
  "aws_instance.snap" -> "aws_subnet.bastion";
  "aws_internet_gateway.igw" -> "aws_vpc.main";
  "aws_lambda_function.leadgen" -> "data.archive_file.code";
  "aws_lambda_function.leadgen" -> "aws_db_instance.postgres";
  "aws_lambda_function.leadgen" -> "aws_iam_role.lambda";
  "aws_lambda_function.leadgen" -> "aws_security_group.lambda";
  "aws_lambda_permission.allow_http_api" -> "aws_apigatewayv2_api.leadgen";
  "aws_lambda_permission.allow_http_api" -> "aws_lambda_function.leadgen";
  "aws_route_table.public_rt" -> "aws_internet_gateway.igw";
  "aws_route_table_association.public_assoc" -> "aws_route_table.public_rt";        
  "aws_route_table_association.public_assoc" -> "aws_subnet.bastion";
  "aws_security_group.ec2" -> "aws_vpc.main";
  "aws_security_group.lambda" -> "aws_vpc.main";
  "aws_security_group.rds" -> "aws_vpc.main";
  "aws_subnet.bastion" -> "aws_vpc.main";
  "aws_subnet.main" -> "aws_vpc.main";
  "aws_subnet.main2" -> "aws_vpc.main";
  "aws_vpc_security_group_ingress_rule.ec2_to_rds" -> "aws_security_group.ec2";     
  "aws_vpc_security_group_ingress_rule.ec2_to_rds" -> "aws_security_group.rds";     
  "aws_vpc_security_group_ingress_rule.lambda_to_rds" -> "aws_security_group.lambda";
  "aws_vpc_security_group_ingress_rule.lambda_to_rds" -> "aws_security_group.rds";  
  "aws_vpc_security_group_ingress_rule.public_to_ec2" -> "aws_security_group.ec2";  
  "aws_lambda_function.leadgen" -> "aws_subnet.main";
    
}